METHOD_BODY → STATEMENT_LIST 
STATEMENT_LIST → STATEMENT STATEMENT_LIST_DASH 
STATEMENT → DECLARATION 
DECLARATION → PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE → int 
Match: int
Match: id
Match: ;
STATEMENT_LIST_DASH → STATEMENT STATEMENT_LIST_DASH 
STATEMENT → ASSIGNMENT 
ASSIGNMENT → id = EXPRESSION ; 
Match: id
Error: missing =, inserted
Empty: discard assign
EXPRESSION → SIMPLE_EXPRESSION EXPRESSION_DASH 
SIMPLE_EXPRESSION → TERM SIMPLE_EXPRESSION_DASH 
TERM → FACTOR TERM_DASH 
FACTOR → num 
Match: num
TERM_DASH → \L 
SIMPLE_EXPRESSION_DASH → \L 
EXPRESSION_DASH → \L 
Match: ;
STATEMENT_LIST_DASH → STATEMENT STATEMENT_LIST_DASH 
STATEMENT → IF 
IF → if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
Match: if
Match: (
EXPRESSION → SIMPLE_EXPRESSION EXPRESSION_DASH 
SIMPLE_EXPRESSION → TERM SIMPLE_EXPRESSION_DASH 
TERM → FACTOR TERM_DASH 
FACTOR → id 
Match: id
TERM_DASH → \L 
SIMPLE_EXPRESSION_DASH → \L 
EXPRESSION_DASH → relop SIMPLE_EXPRESSION 
Match: relop
SIMPLE_EXPRESSION → TERM SIMPLE_EXPRESSION_DASH 
TERM → FACTOR TERM_DASH 
FACTOR → num 
Match: num
TERM_DASH → \L 
SIMPLE_EXPRESSION_DASH → \L 
Match: )
Match: {
STATEMENT → ASSIGNMENT 
ASSIGNMENT → id = EXPRESSION ; 
Match: id
Error: missing =, inserted
Empty: discard assign
EXPRESSION → SIMPLE_EXPRESSION EXPRESSION_DASH 
SIMPLE_EXPRESSION → TERM SIMPLE_EXPRESSION_DASH 
TERM → FACTOR TERM_DASH 
FACTOR → num 
Match: num
TERM_DASH → \L 
SIMPLE_EXPRESSION_DASH → \L 
EXPRESSION_DASH → \L 
Match: ;
Match: }
Error: missing else, inserted
Error: missing {, inserted
Sync: discard STATEMENT
Error: missing }, inserted
STATEMENT_LIST_DASH → \L 
Match: $
